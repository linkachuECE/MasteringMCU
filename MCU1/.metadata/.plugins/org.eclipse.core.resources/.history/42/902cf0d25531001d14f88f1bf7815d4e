/*
 * stm32407xx_spi_driver.c
 *
 *  Created on: Sep 10, 2022
 *      Author: linkachu
 */

#include "stm32f407xx.h"

// Peripheral clock setup
void SPI_PeriClockControl(SPI_RegDef_t *pSPIx, uint8_t EnorDi){
	if(EnorDi == ENABLE){
		if(pSPIx == SPI1)
			SPI1_PCLK_EN();
		else if (pSPIx == SPI2)
			SPI2_PCLK_EN();
		else if (pSPIx == SPI3)
			SPI3_PCLK_EN();
	} else if (EnorDi == DISABLE){
		if(pSPIx == SPI1)
			SPI1_PCLK_DI();
		else if (pSPIx == SPI2)
			SPI2_PCLK_DI();
		else if (pSPIx == SPI3)
			SPI3_PCLK_DI();
	}
}

// Init and de-enit
void SPI_Init(SPI_Handle_t *pSPIHandle){

}

void SPI_DeInit(SPI_RegDef_t *pSPIx){

}

// IRQ Handling

void SPI_IRQInterruptConfig(uint8_t IRQNumber, uint32_t IRQPriority, uint8_t EnorDi){

}

void SPI_IRQPriorityConfig(uint8_t IRQNumber, uint32_t IRQPriority){

}

void SPI_IRQHandling(SPI_Handle_t *pHandle){

}

/*
typedef struct {
	__vo uint32_t CR1;				// Control register 1
	__vo uint32_t CR2;				// Control register 2
	__vo uint32_t SR;				// Status register
	__vo uint32_t DR;				// Data register
	__vo uint32_t CRCPR;			// CRC polynomial register
	__vo uint32_t RXCRCR;			// RX CRC register
	__vo uint32_t TXCRCR;			// TX CRC register
	__vo uint32_t I2SCFGR;			// I2S configuration register
	__vo uint32_t I2SPR;			// I2S pre-scaler register
} SPI_RegDef_t;
 */
/*
typedef struct{
	uint8_t SPI_DeviceMode;
	uint8_t SPI_BusConfig;
	uint8_t SPI_SclkSpeed;
	uint8_t SPI_DFF;
	uint8_t SPI_CPOL;
	uint8_t SPI_CPHA;
	uint8_t SPI_SSM;
} SPI_Config_t;
*/
